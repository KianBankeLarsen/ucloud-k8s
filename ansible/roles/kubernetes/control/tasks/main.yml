---
- name: install kubectl
  apt:
    name: kubectl=1.30.*
    state: present
    force: yes

- name: initialize the cluster
  shell: kubeadm init --pod-network-cidr=10.244.0.0/16 --cri-socket=unix:///var/run/cri-dockerd.sock --apiserver-advertise-address=$(tailscale ip -4) >> cluster_initialized.txt
  args:
    chdir: $HOME
    creates: cluster_initialized.txt

- name: create .kube directory
  become_user: "{{ ansible_user }}"
  file:
    path: $HOME/.kube
    state: directory
    mode: 0700

- name: copy admin.conf to user's kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "/home/{{ ansible_user }}/.kube/config"
    remote_src: yes
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0700

- name: download flannel manifest
  become_user: "{{ ansible_user }}"
  get_url:
    url: https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
    dest: ~/kube-flannel.yml

- name: update flannel network interface to tailscale0
  become_user: "{{ ansible_user }}"
  shell: |
    yq -i '(. | select (.kind == "DaemonSet") | .spec.template.spec.containers.[] | select (.name == "kube-flannel") | .args) += "--iface=tailscale0"' kube-flannel.yml

- name: install pod network
  become_user: "{{ ansible_user }}"
  shell: kubectl apply -f ~/kube-flannel.yml

- name: get join command
  shell: kubeadm token create --print-join-command
  register: join_command_raw

- name: set join command
  set_fact:
    join_command: "{{ join_command_raw.stdout_lines[0] }} --cri-socket=unix:///var/run/cri-dockerd.sock"
